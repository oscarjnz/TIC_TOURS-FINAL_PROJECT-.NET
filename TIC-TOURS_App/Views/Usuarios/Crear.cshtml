@model capaModelo.DTO.UsuarioDTO
@{
    // ViewBag.Title = Model.IdUsuario == 0 ? "Nuevo Usuario" : "Editar Usuario";
    var roles = ViewBag.Roles as List<capaModelo.DTO.RolDTO> ?? new List<capaModelo.DTO.RolDTO>();
}

<div class="bg-gradient-to-r from-blue-50 to-purple-50 py-8">
    <div class="max-w-3xl mx-auto px-4 sm:px-6">
        <div class="bg-white rounded-xl shadow-md overflow-hidden">
            <div class="px-6 py-5 border-b border-gray-200">
                <h2 class="text-2xl font-bold text-gray-900 flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2 text-purple-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                    @ViewBag.Title
                </h2>
            </div>

            <div class="px-6 py-6">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "space-y-6" }))
                {
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="space-y-2">
                            <label for="Nombre" class="block text-sm font-medium text-gray-700">
                                @Html.LabelFor(m => m.Nombre)
                            </label>
                            <div class="mt-1">
                                @Html.TextBoxFor(m => m.Nombre, new { @class = "w-full rounded-lg border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200 focus:ring-opacity-50" })
                            </div>
                        </div>

                        <div class="space-y-2">
                            <label for="Apellido" class="block text-sm font-medium text-gray-700">
                                @Html.LabelFor(m => m.Apellido)
                            </label>
                            <div class="mt-1">
                                @Html.TextBoxFor(m => m.Apellido, new { @class = "w-full rounded-lg border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200 focus:ring-opacity-50" })
                            </div>
                        </div>
                    </div>

                    <div class="space-y-2">
                        <label for="CorreoElectronico" class="block text-sm font-medium text-gray-700">
                            @Html.LabelFor(m => m.CorreoElectronico)
                        </label>
                        <div class="mt-1 relative rounded-md shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                </svg>
                            </div>
                            @Html.TextBoxFor(m => m.CorreoElectronico, new { @class = "w-full pl-10 rounded-lg border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200 focus:ring-opacity-50", type = "email" })
                        </div>
                    </div>

                    <div class="space-y-2">
                        <label for="Contrasena" class="block text-sm font-medium text-gray-700">
                            @Html.LabelFor(m => m.Contrasena)
                        </label>
                        <div class="mt-1 relative rounded-md shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                                </svg>
                            </div>
                            @Html.PasswordFor(m => m.Contrasena, new { @class = "w-full pl-10 rounded-lg border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200 focus:ring-opacity-50" })
                        </div>
                        <p class="text-xs text-gray-500 mt-1">
                            @* @(Model.IdUsuario == 0 ? "Crea una contraseña segura" : "Deja en blanco para mantener la contraseña actual") *@
                        </p>
                    </div>

                    <div class="space-y-2">
                        <label for="IdRol" class="block text-sm font-medium text-gray-700">
                            @Html.Label("Rol")
                        </label>
                        @* <div class="mt-1"> *@
                        @*     <select name="IdRol" class="w-full rounded-lg border-gray-300 shadow-sm focus:border-purple-500 focus:ring focus:ring-purple-200 focus:ring-opacity-50"> *@
                        @*         @foreach (var r in roles) *@
                        @*         { *@
                        @*         <option value="@r.IdRol" @(Model.IdRol == r.IdRol ? "selected" : "")>@r.NombreRol</option> *@
                        @*         } *@
                        @*     </select> *@
                        @* </div> *@
                    </div>

                    <div class="pt-4 border-t border-gray-200">
                        <div class="flex flex-col sm:flex-row sm:justify-between gap-3">
                            <button type="submit" class="inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-colors duration-200">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                                Guardar Usuario
                            </button>
                            <a href="@Url.Action("Index", "Usuarios")" class="inline-flex justify-center items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md shadow-sm text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-colors duration-200">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                </svg>
                                Cancelar
                            </a>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>