@model capaModelo.DTO.UsuarioDTO
@{
    ViewBag.Title = "Mi Perfil";
}

<!-- Encabezado de secciÃÂÃÂ³n -->
<div class="bg-gradient-to-r from-orange-600 to-orange-400 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="md:flex md:items-center md:justify-between">
            <div class="flex-1 min-w-0">
                <h1 class="text-2xl font-bold leading-7 text-black sm:text-3xl sm:truncate">
                    Mi Perfil
                </h1>
                <p class="mt-2 text-sm text-black text-opacity-80">
                    Gestiona tu informaciÃÂÃÂ³n personal y preferencias
                </p>
            </div>
        </div>
    </div>
</div>

<!-- Contenido principal -->
<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="bg-white shadow overflow-hidden sm:rounded-lg">
        <div class="lg:flex">
            <!-- Columna izquierda: Foto y datos bÃÂÃÂ¡sicos -->
            <div class="lg:w-1/3 border-r border-gray-200">
                <div class="px-4 py-5 sm:px-6 flex flex-col items-center">
                    <div class="relative group">
                        <div class="w-40 h-40 rounded-full overflow-hidden bg-gray-100 border-4 border-white shadow-lg mb-4">
                            <img id="profileImage" src="/placeholder.svg?height=160&width=160" alt="Foto de perfil" class="w-full h-full object-cover" />
                        </div>
                        <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                            <label for="photoUpload" class="cursor-pointer bg-black bg-opacity-50 text-white rounded-full p-2 hover:bg-opacity-70 transition-all">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z" />
                                </svg>
                            </label>
                            <input type="file" id="photoUpload" class="hidden" accept="image/*" />
                        </div>
                    </div>

                    <h2 class="text-xl font-bold text-gray-900">@Model.Nombre @Model.Apellido</h2>
                    <p class="text-sm text-gray-500 mt-1">@Model.Nacionalidad</p>

                    <div class="mt-6 w-full">
                        <div class="flex items-center justify-between py-3 border-b border-gray-200">
                                   <span class="text-sm font-medium text-gray-500">Miembro desde</span>
                            <span class="text-sm text-gray-900"> @(Model.FechaRegistro.HasValue ? Model.FechaRegistro.Value.ToString("MMMM yyyy", new System.Globalization.CultureInfo("es-ES")) : "Sin registro")</span>
                        </div>
                        @* <div class="flex items-center justify-between py-3 border-b border-gray-200"> *@
                        @*     <span class="text-sm font-medium text-gray-500">Viajes realizados</span> *@
                        @*     <span class="text-sm text-gray-900">5</span> *@
                        @* </div> *@
                        <div class="flex items-center justify-between py-3">
                            <span class="text-sm font-medium text-gray-500">PÃÂÃÂ³lizas activas</span>
                            <span class="text-sm text-gray-900">2</span>
                        </div>
                    </div>

                    <div class="mt-6 w-full">
                    <a href="@Url.Action("MisPolizas", "Perfil")" class="mt-3 w-full flex items-center justify-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                            Historial de PÃÂÃÂ³lizas
                        </a>
                    </div>
                </div>
            </div>

            <!-- Columna derecha: Formulario de informaciÃÂÃÂ³n personal -->
            <div class="lg:w-2/3">
                <div class="px-4 py-5 sm:px-6 border-b border-gray-200">
                    <div class="flex justify-between items-center">
                        <h3 class="text-lg leading-6 font-medium text-gray-900">InformaciÃÂÃÂ³n personal</h3>
                        <div>
                            <button type="button" id="btnEditar" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                                </svg>
                                Editar
                            </button>
                            <button type="button" id="btnGuardar" class="hidden inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-black bg-orange-600 hover:bg-orange-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                                Guardar
                            </button>
                            <button type="button" id="btnCancelar" class="hidden ml-2 inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                </svg>
                                Cancelar
                            </button>
                        </div>
                    </div>
                </div>

                @using (Html.BeginForm("ActualizarDatos", "Perfil", FormMethod.Post, new { id = "formPerfil", @class = "p-6" }))
                {
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <label for="Nombre" class="block text-sm font-medium text-gray-700">Nombre</label>
                            <div class="mt-1">
                                @Html.TextBoxFor(m => m.Nombre, new { @class = "shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full sm:text-sm border-gray-300 rounded-md", @readonly = "readonly", id = "Nombre" })
                            </div>
                        </div>

                        <div>
                            <label for="Apellido" class="block text-sm font-medium text-gray-700">Apellido</label>
                            <div class="mt-1">
                                @Html.TextBoxFor(m => m.Apellido, new { @class = "shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full sm:text-sm border-gray-300 rounded-md", @readonly = "readonly", id = "Apellido" })
                            </div>
                        </div>

                        <div>
                            <label for="Telefono" class="block text-sm font-medium text-gray-700">TelÃÂÃÂ©fono</label>
                            <div class="mt-1">
                                @Html.TextBoxFor(m => m.Telefono, new { @class = "shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full sm:text-sm border-gray-300 rounded-md", @readonly = "readonly", id = "Telefono" })
                            </div>
                        </div>

                        <div>
                            <label for="Direccion" class="block text-sm font-medium text-gray-700">DirecciÃÂÃÂ³n</label>
                            <div class="mt-1">
                                @Html.TextBoxFor(m => m.Direccion, new { @class = "shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full sm:text-sm border-gray-300 rounded-md", @readonly = "readonly", id = "Direccion" })
                            </div>
                        </div>

                        <div>
                            <label for="Genero" class="block text-sm font-medium text-gray-700">GÃÂÃÂ©nero</label>
                            <div class="mt-1">
                                @Html.TextBoxFor(m => m.Genero, new { @class = "shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full sm:text-sm border-gray-300 rounded-md", @readonly = "readonly", id = "Genero" })
                            </div>
                        </div>

                        <div>
                            <label for="Nacionalidad" class="block text-sm font-medium text-gray-700">Nacionalidad</label>
                            <div class="mt-1">
                                @Html.TextBoxFor(m => m.Nacionalidad, new { @class = "shadow-sm focus:ring-orange-500 focus:border-orange-500 block w-full sm:text-sm border-gray-300 rounded-md", @readonly = "readonly", id = "Nacionalidad" })
                            </div>
                        </div>

                        <div class="md:col-span-2">
                            <label for="Email" class="block text-sm font-medium text-gray-700">Correo electrÃÂÃÂ³nico</label>
                            <div class="mt-1 flex rounded-md shadow-sm">
                                <span class="inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 sm:text-sm">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                    </svg>
                                </span>
                                <input type="email" name="Email" id="Email" class="flex-1 focus:ring-orange-500 focus:border-orange-500 block w-full min-w-0 rounded-none rounded-r-md sm:text-sm border-gray-300" value="usuario@ejemplo.com" readonly>
                            </div>
                            <p class="mt-2 text-sm text-gray-500">Tu correo electrÃÂÃÂ³nico no se puede modificar</p>
                        </div>
                    </div>

                    <div class="mt-8 border-t border-gray-200 pt-6">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Preferencias de viaje</h3>

                        <div class="space-y-4">
                            <div class="relative flex items-start">
                                <div class="flex items-center h-5">
                                    <input id="preferencia1" name="preferencia1" type="checkbox" class="focus:ring-orange-500 h-4 w-4 text-orange-600 border-gray-300 rounded" disabled>
                                </div>
                                <div class="ml-3 text-sm">
                                    <label for="preferencia1" class="font-medium text-gray-700">Recibir ofertas especiales</label>
                                    <p class="text-gray-500">Recibe notificaciones sobre promociones y descuentos exclusivos.</p>
                                </div>
                            </div>

                            <div class="relative flex items-start">
                                <div class="flex items-center h-5">
                                    <input id="preferencia2" name="preferencia2" type="checkbox" class="focus:ring-orange-500 h-4 w-4 text-orange-600 border-gray-300 rounded" checked disabled>
                                </div>
                                <div class="ml-3 text-sm">
                                    <label for="preferencia2" class="font-medium text-gray-700">Recordatorios de viaje</label>
                                    <p class="text-gray-500">Recibe alertas sobre tus prÃÂÃÂ³ximos viajes y vencimientos de pÃÂÃÂ³lizas.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Elementos del DOM
        const inputs = document.querySelectorAll('#formPerfil input:not([type="email"])');
        const checkboxes = document.querySelectorAll('#formPerfil input[type="checkbox"]');
        const btnEditar = document.getElementById('btnEditar');
        const btnGuardar = document.getElementById('btnGuardar');
        const btnCancelar = document.getElementById('btnCancelar');
        const formPerfil = document.getElementById('formPerfil');
        const photoUpload = document.getElementById('photoUpload');
        const profileImage = document.getElementById('profileImage');

        // Valores originales para restaurar en caso de cancelaciÃÂÃÂ³n
        const originalValues = {};

        // Guardar valores originales
        inputs.forEach(input => {
            originalValues[input.id] = input.value;
        });

        // Habilitar ediciÃÂÃÂ³n
        btnEditar.addEventListener('click', () => {
            inputs.forEach(input => {
                input.removeAttribute('readonly');
                input.classList.add('border-orange-300');
            });

            checkboxes.forEach(checkbox => {
                checkbox.disabled = false;
            });

            btnEditar.classList.add('hidden');
            btnGuardar.classList.remove('hidden');
            btnCancelar.classList.remove('hidden');
        });

        // Cancelar ediciÃÂÃÂ³n
        btnCancelar.addEventListener('click', () => {
            // Restaurar valores originales
            inputs.forEach(input => {
                input.value = originalValues[input.id] || '';
                input.setAttribute('readonly', 'readonly');
                input.classList.remove('border-orange-300');
            });

            checkboxes.forEach(checkbox => {
                checkbox.disabled = true;
            });

            btnEditar.classList.remove('hidden');
            btnGuardar.classList.add('hidden');
            btnCancelar.classList.add('hidden');
        });

        // Guardar cambios
        btnGuardar.addEventListener('click', () => {
            formPerfil.submit();
        });

        // Cambiar foto de perfil
        photoUpload.addEventListener('change', (e) => {
            if (e.target.files && e.target.files[0]) {
                const reader = new FileReader();

                reader.onload = function(event) {
                    profileImage.src = event.target.result;
                }

                reader.readAsDataURL(e.target.files[0]);

                // AquÃÂÃÂ­ se podrÃÂÃÂ­a agregar cÃÂÃÂ³digo para subir la imagen al servidor
                // mediante una peticiÃÂÃÂ³n AJAX
            }
        });

        // AnimaciÃÂÃÂ³n de entrada
        document.addEventListener('DOMContentLoaded', function() {
            const profileCard = document.querySelector('.bg-white');
            profileCard.style.opacity = '0';
            setTimeout(() => {
                profileCard.style.transition = 'opacity 0.5s ease-in-out';
                profileCard.style.opacity = '1';
            }, 100);
        });
    </script>
}